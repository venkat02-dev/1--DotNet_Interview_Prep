sample and simple: wcf service hosting with windows service with .net 4.7

ChatGPT said:
Sure! Here's a simple and complete sample of hosting a WCF Service in a Windows Service using .NET Framework 4.7. This includes:

A basic WCF service contract and implementation
Hosting the WCF service inside a Windows Service

Basic service installation support via ServiceInstaller and ServiceProcessInstaller

üìÅ Project Structure
Create a Console Application (change it to a Windows Service later):

Add references to:

System.ServiceModel

System.Configuration.Install

System.ServiceProcess

1. WCF Service Contract and Implementation
 
 
 
// IHelloService.cs
[ServiceContract]
public interface IHelloService
{
    [OperationContract]
    string SayHello(string name);
}
 
 
 
// HelloService.cs
public class HelloService : IHelloService
{
    public string SayHello(string name)
    {
        return $"Hello, {name}!";
    }
}
2. Windows Service to Host WCF
 
 
 
// HelloWindowsService.cs
using System;
using System.ServiceModel;
using System.ServiceProcess;

public class HelloWindowsService : ServiceBase
{
    public ServiceHost serviceHost = null;

    public HelloWindowsService()
    {
        this.ServiceName = "HelloWcfService";
    }

    protected override void OnStart(string[] args)
    {
        if (serviceHost != null)
        {
            serviceHost.Close();
        }

        // Base address
        Uri baseAddress = new Uri("http://localhost:8080/HelloService");

        serviceHost = new ServiceHost(typeof(HelloService), baseAddress);

        // Add endpoint
        serviceHost.AddServiceEndpoint(
            typeof(IHelloService),
            new BasicHttpBinding(),
            "");

        serviceHost.Open();
    }

    protected override void OnStop()
    {
        if (serviceHost != null)
        {
            serviceHost.Close();
            serviceHost = null;
        }
    }

    // For debugging from console
    public static void Main()
    {
        ServiceBase.Run(new HelloWindowsService());
    }
}
3. Add Service Installer
 
 
 
// ProjectInstaller.cs
using System.ComponentModel;
using System.Configuration.Install;
using System.ServiceProcess;

[RunInstaller(true)]
public class ProjectInstaller : Installer
{
    private ServiceProcessInstaller processInstaller;
    private ServiceInstaller serviceInstaller;

    public ProjectInstaller()
    {
        processInstaller = new ServiceProcessInstaller();
        serviceInstaller = new ServiceInstaller();

        // Run as LocalSystem
        processInstaller.Account = ServiceAccount.LocalSystem;

        serviceInstaller.ServiceName = "HelloWcfService";
        serviceInstaller.DisplayName = "Hello WCF Windows Service";
        serviceInstaller.StartType = ServiceStartMode.Automatic;

        Installers.Add(processInstaller);
        Installers.Add(serviceInstaller);
    }
}
4. Install and Start the Service
Use the Developer Command Prompt for Visual Studio:

bash
 
 
# Build the project
cd path\to\bin\Debug
InstallUtil HelloWcfWindowsService.exe

# Start the service
net start HelloWcfService
To uninstall:

bash
 
 
net stop HelloWcfService
InstallUtil /u HelloWcfWindowsService.exe
Would you like a version with app.config hosting and metadata exchange (MEX) as well?



